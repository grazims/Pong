{"version":3,"sources":["src/settings.js","src/partials/Board.js","src/partials/Paddle.js","src/partials/Ball.js","src/partials/Score.js","src/partials/Game.js","src/index.js"],"names":["SVG_NS","PADDLE_WIDTH","PADDLE_HEIGHT","BOARD_GAP","SPEED","RADIUS","TEXT_SIZE","KEYS","p1up","p1down","p2up","p2down","pause","Board","width","height","svg","rect","document","createElementNS","setAttributeNS","appendChild","line","Paddle","boardHeight","paddleWidth","paddleHeight","initialX","initialY","keyUp","keyDown","x","y","score","speed","addEventListener","event","key","moveUp","moveDown","Math","max","min","walls","left","top","right","bottom","Ball","boardWidth","radius","direction","ping","Audio","audioFile","reset","vx","vy","floor","random","abs","hitsTop","hitsBottom","player1","player2","increaseScore","p2","getCoordinates","play","p1","circle","wallCollision","goalCollision","paddleCollision","Score","xPosition","yPosition","text","textContent","Game","element","paused","gameElement","getElementById","board","boardMid","paddle1","paddle2Gap","paddle2","ball","score1","score2","setSpeed","innerHTML","render","getScore","game","gameLoop","requestAnimationFrame"],"mappings":"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","file":"src.bbb20736.js","sourceRoot":"..","sourcesContent":["export const SVG_NS = \"http://www.w3.org/2000/svg\";\n\nexport const PADDLE_WIDTH = 8, PADDLE_HEIGHT = 56, BOARD_GAP = 10, SPEED = 15, RADIUS = 8, TEXT_SIZE = 30;\nexport const KEYS = {\n    p1up: 'a',\n    p1down: 'z',\n    p2up: 'ArrowUp',\n    p2down: 'ArrowDown',\n    pause: ' '\n};\n\n","import { SVG_NS } from '../settings';\n\nexport default class Board {\n  constructor(width, height) {\n      this.width = width;\n      this.height = height;\n  }\nrender(svg) {\n        let rect = document.createElementNS(SVG_NS, 'rect');\n            rect.setAttributeNS(null, 'width', this.width);\n            rect.setAttributeNS(null, 'height', this.height);\n            rect.setAttributeNS(null, 'fill', 'gray');\n            rect.setAttributeNS(null, 'x', \"0\");\n            rect.setAttributeNS(null, 'y', \"0\");\n            svg.appendChild(rect);\n            let line = document.createElementNS(SVG_NS, 'line');\n            line.setAttributeNS(null, \"x1\", this.width/2);\n            line.setAttributeNS(null, \"y1\", 0);\n            line.setAttributeNS(null, \"x2\", this.width/2);\n            line.setAttributeNS(null, \"y2\", this.height);\n            line.setAttributeNS(null, \"stroke\", \"yellow\");\n            line.setAttributeNS(null, \"stroke-width\", 4);\n            line.setAttributeNS(null, \"stroke-dasharray\", \"20 15\");\n            svg.appendChild(line);\n}\n}\n","import { SVG_NS, SPEED } from '../settings';\n\nexport default class Paddle { \n    constructor(boardHeight, paddleWidth, paddleHeight, initialX, initialY, keyUp, keyDown) {\n        this.boardHeight = boardHeight;\n        this.paddleWidth = paddleWidth;\n        this.paddleHeight = paddleHeight;\n        this.x = initialX;\n        this.y = initialY;\n        this.score = 0;\n        this.speed = SPEED;\n        document.addEventListener(\"keydown\", event => {\n            switch(event.key) {\n                case keyUp:\n                this.moveUp();\n                break;\n                case keyDown:\n                this.moveDown();\n                break;\n            }\n        });\n    }\nincreaseScore() {\n    this.score++;\n}\ngetScore() {\n    return this.score;\n}\nsetSpeed(speed) {\n    this.speed = speed;\n}\nmoveUp() {\n    this.y = Math.max(0, this.y - this.speed);\n}\nmoveDown() {\n    this.y = Math.min(this.boardHeight - this.paddleHeight - this.speed, this.y + this.speed);\n}\ngetCoordinates() {\n    const walls = {\n        left: this.x,\n        top: this.y,\n        right: this.x + this.paddleWidth,\n        bottom: this.y + this.paddleHeight,\n    }\n    return walls;\n}\nrender(svg) {\n      let rect = document.createElementNS(SVG_NS, 'rect');\n          rect.setAttributeNS(null, 'width', this.paddleWidth);\n          rect.setAttributeNS(null, 'height', this.paddleHeight);\n          rect.setAttributeNS(null, 'fill', 'yellow');\n          rect.setAttributeNS(null, \"x\", this.x);\n          rect.setAttributeNS(null, \"y\", this.y);\n          svg.appendChild(rect);\n}\n}","import { SVG_NS } from '../settings';\nimport audioFile from '../../public/sounds/pong-01.wav';\n\nexport default class Ball {\n  constructor(boardWidth, boardHeight, radius) {\n      this.boardWidth = boardWidth;\n      this.boardHeight = boardHeight;\n      this.radius = radius;\n      this.direction = 1.1;\n      this.ping = new Audio(audioFile);\n      this.reset();\n  }\n  reset() {\n    this.x = this.boardWidth / 2;\n    this.y = this.boardHeight / 2;\n    this.vx = 0;\n    this.vy = 0;\n    while (this.vy ===0){\n        this.vy = Math.floor(Math.random() * 10 - 5);\n    }\n    this.vx = this.direction * (6 - Math.abs(this.vy));\n  }\n    wallCollision() {\n        const hitsTop = this.y - this.radius <= 0;\n        const hitsBottom = this.y + this.radius >= this.boardHeight; \n        if (hitsTop || hitsBottom) {\n            this.vy = this.vy * -1;\n        }\n    }\n    goalCollision(player1, player2) {\n        if (this.x <= 0) {\n            player2.increaseScore();\n            this.direction = this.direction * -1;\n            this.reset();\n        } else if (this.x >= this.boardWidth) {\n            player1.increaseScore();\n            this.direction = this.direction * -1;\n            this.reset();\n        } \n    }\n    paddleCollision(player1, player2) {\n        if (this.vx > 0) {\n            const p2 = player2.getCoordinates();\n        if(this.x + this.radius >= p2.left && \n            this.x + this.radius <= p2.right &&\n            this.y >= p2.top &&\n            this.y <= p2.bottom ) {\n                this.vx = this.vx * -1;\n                this.ping.play();\n            }\n        } else {\n            const p1 = player1.getCoordinates();\n            if(this.x - this.radius <= p1.right &&\n                this.x - this.radius >= p1.left && \n                this.y >= p1.top &&\n                this.y <= p1.bottom ) {\n                    this.vx = this.vx * -1;\n                    this.ping.play();\n                }\n        }\n    }\nrender(svg, player1, player2) {\n        let circle = document.createElementNS(SVG_NS, 'circle');\n            circle.setAttributeNS(null, 'fill', 'pink');\n            circle.setAttributeNS(null, 'cx', this.x);\n            circle.setAttributeNS(null, 'cy', this.y);\n            circle.setAttributeNS(null, 'r', this.radius);\n            this.x = this.x + this.vx;\n            this.y = this.y + this.vy;\n            this.wallCollision();\n            this.goalCollision(player1, player2);\n            this.paddleCollision(player1, player2);\n            svg.appendChild(circle);\n}\n}\n","import { SVG_NS, TEXT_SIZE } from '../settings';\n\nexport default class Score {\n  constructor(xPosition, yPosition) {\n      this.x = xPosition;\n      this.y = yPosition;\n  }\nrender(svg, score) {\n        let text = document.createElementNS(SVG_NS, 'text');\n            text.setAttributeNS(null, 'fill', \"green\");\n            text.setAttributeNS(null, \"font-size\", TEXT_SIZE);\n            text.setAttributeNS(null, \"font-family\", \"'Silkscreen Web', monotype\");\n            text.setAttributeNS(null, \"x\", this.x );\n            text.setAttributeNS(null, \"y\", this.y);\n            text.textContent = score;\n            svg.appendChild(text);          \n}\n}\n","import { SVG_NS, PADDLE_WIDTH, PADDLE_HEIGHT, BOARD_GAP, KEYS, RADIUS, SPEED } from '../settings';\nimport Board from './Board';\nimport Paddle from './Paddle';\nimport Ball from './Ball'\nimport Score from './Score';\n\nexport default class Game {\n  constructor(element, width, height) {\n    this.element = element;\n    this.width = width;\n    this.height = height;\n    this.paused = false;\n    this.gameElement = document.getElementById(this.element);\n    this.board = new Board(this.width, this.height);\n    const boardMid = (this.height - PADDLE_HEIGHT) / 2;\n    this.paddle1 = new Paddle(this.height, PADDLE_WIDTH, PADDLE_HEIGHT, BOARD_GAP, boardMid, KEYS.p1up, KEYS.p1down);\n    const paddle2Gap = this.width - BOARD_GAP - PADDLE_WIDTH;\n    this.paddle2 = new Paddle(this.height, PADDLE_WIDTH, PADDLE_HEIGHT, paddle2Gap, boardMid, KEYS.p2up, KEYS.p2down);\n    \n    this.ball = new Ball(this.width, this.height, RADIUS);\n    this.score1 = new Score(this.width/2 - 50, 30);\n    this.score2 = new Score(this.width/2 + 25,30);\n    document.addEventListener(\"keydown\", (event) => {\n      if(event.key === KEYS.pause) {\n        this.paused = !this.paused;\n        this.paddle1.setSpeed(SPEED);\n        this.paddle2.setSpeed(SPEED);\n      }\n    });\n  }\n  render() {\n    if (this.paused) {\n      this.paddle1.setSpeed(0);\n      this.paddle2.setSpeed(0);\n      return;}\n    this.gameElement.innerHTML = '';\n    let svg = document.createElementNS(SVG_NS, 'svg');\n    svg.setAttributeNS(null, \"width\", this.width);\n    svg.setAttributeNS(null, \"height\", this.height);\n    svg.setAttributeNS(null, \"viewBox\", `0 0 ${this.width} ${this.height}`);\n    this.gameElement.appendChild(svg);\n    this.board.render(svg);\n    this.paddle1.render(svg);\n    this.paddle2.render(svg);\n    this.ball.render(svg, this.paddle1, this.paddle2);\n    this.score1.render(svg, this.paddle1.getScore());\n    this.score2.render(svg, this.paddle2.getScore());\n    }\n  }\n\n","import './styles/game.css';\nimport Game from './partials/Game';\n\nconst game = new Game('game', 512, 256);\n\n(function gameLoop() {\n  game.render();\n  requestAnimationFrame(gameLoop);\n})();\n"]}